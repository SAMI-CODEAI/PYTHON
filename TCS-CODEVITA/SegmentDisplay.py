# Define the patterns for each alphabet
patterns = {
    'A': ["11111", "10001", "10001", "10001", "11111", "10001", "10001", "10001", "10001"],
    'B': ["11111", "10001", "10001", "10001", "11111", "10001", "10001", "10001", "11111"],
    'C': ["11111", "10000", "10000", "10000", "10000", "10000", "10000", "10000", "11111"],
    'D': ["11110", "10001", "10001", "10001", "10001", "10001", "10001", "10001", "11110"],
    'E': ["11111", "10000", "10000", "10000", "11111", "10000", "10000", "10000", "11111"],
    'F': ["11111", "10000", "10000", "10000", "11111", "10000", "10000", "10000", "10000"],
    'G': ["11111", "10000", "10000", "10000", "10011", "10001", "10001", "10001", "11111"],
    'H': ["10001", "10001", "10001", "10001", "11111", "10001", "10001", "10001", "10001"],
    'I': ["11111", "00100", "00100", "00100", "00100", "00100", "00100", "00100", "11111"],
    'J': ["11111", "00001", "00001", "00001", "00001", "00001", "00001", "10001", "11111"],
    'K': ["10001", "10010", "10100", "11000", "10000", "11000", "10100", "10010", "10001"],
    'L': ["10000", "10000", "10000", "10000", "10000", "10000", "10000", "10000", "11111"],
    'M': ["10001", "11011", "10101", "10101", "10001", "10001", "10001", "10001", "10001"],
    'N': ["10001", "11001", "10101", "10101", "10011", "10001", "10001", "10001", "10001"],
    'O': ["11111", "10001", "10001", "10001", "10001", "10001", "10001", "10001", "11111"],
    'P': ["11111", "10001", "10001", "10001", "11111", "10000", "10000", "10000", "10000"],
    'Q': ["11111", "10001", "10001", "10001", "10001", "10001", "10010", "11101"],
    'R': ["11111", "10001", "10001", "10001", "11111", "10100", "10010", "10001", "10001"],
    'S': ["11111", "10000", "10000", "10000", "11111", "00001", "00001", "00001", "11111"],
    'T': ["11111", "00100", "00100", "00100", "00100", "00100", "00100", "00100", "00100"],
    'U': ["10001", "10001", "10001", "10001", "10001", "10001", "10001", "10001", "11111"],
    'V': ["10001", "10001", "10001", "10001", "10001", "10001", "01010", "00100"],
    'W': ["10001", "10001", "10001", "10001", "10001", "10101", "10101", "11011", "10001"],
    'X': ["10001", "10001", "01010", "00100", "00100", "01010", "10001", "10001"],
    'Y': ["10001", "10001", "10001", "10001", "01010", "00100", "00100", "00100", "00100"],
    'Z': ["11111", "00001", "00010", "00100", "01000", "10000", "10000", "10000", "11111"]
}


def recognize_alphabets(grid):
    n = len(grid[0])  # The number of columns
    result = []
    i = 0

    while i < n:
        # Skip padding zeros (we'll skip any series of zero columns)
        if grid[0][i:i + 5] == "00000":
            i += 5
            continue

        # Check for matching patterns
        for letter, pattern in patterns.items():
            match = True
            for row in range(9):
                if grid[row][i:i + 5] != pattern[row]:
                    match = False
                    break
            if match:
                result.append(letter)
                i += 5
                break
        else:
            # Skip one column if no match
            i += 1
    return ''.join(result)


def main():
    # Reading input grid
    grid = [input().strip() for _ in range(9)]
    print(recognize_alphabets(grid))


if __name__ == "__main__":
    main()
